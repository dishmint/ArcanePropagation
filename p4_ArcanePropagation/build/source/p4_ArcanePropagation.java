/* autogenerated by Processing revision 1281 on 2022-02-24 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class p4_ArcanePropagation extends PApplet {

// FILE: ArcanePropagation
// AUTHOR: Faizon Zaman

PShader blueline;
PGraphics pg,canvas;

PImage img;


 public void setup(){
	/* size commented out by preprocessor */;

	pg = createGraphics(400, 400, P2D);
	pg.noSmooth();
	
	// img = loadImage("./imgs/buff_skate.JPG");
	img = loadImage("./imgs/face.png");
	
	blueline = loadShader("blueline.glsl");
	blueline.set("resolution", PApplet.parseFloat(pg.width), PApplet.parseFloat(pg.height));
	blueline.set("tex0", img);
	blueline.set("aspect", PApplet.parseFloat(img.width)/PApplet.parseFloat(img.height));
}


 public void draw(){
	blueline.set("time", millis() / 1000.0f);
	pg.beginDraw();
	pg.background(0);
	pg.shader(blueline);
	pg.rect(0, 0, pg.width, pg.height);
	pg.endDraw();
	
	kernelp(img);
	
	blueline.set("tex0", img);
	image(pg, 0, 0, width, height);

}

// GrayScale-ificatino can be done in the shader
// let gs =
// 	(0.2989 * currentPixel[0] +
// 		0.5870 * currentPixel[1] +
// 		0.1140 * currentPixel[2]
// 	) / 255

// if (iShouldSetTransmissionStrengthByImage) {
// 	let tmS = map(gs, 0, 1, -.5, .5)
// 	cBit.setTransmissionStrength(tmS)
// }

// transmit(neighbors) {
// 	let transmission = this.energy * this.transmissionStrength
// 	let sum = 0
// 	for (let neighbor of neighbors) {
// 		sum += neighbor.energy
// 		this.energy -= (transmission / neighbors.length)
// 	}
// }

 public void kernelp(PImage image ) {
	image.loadPixels();
	for (int i = 0; i < image.width; i++){
		for (int j = 0; j < image.height; j++){
			int index = (i + j * image.width);
			image.pixels[index] = image.pixels[index];
		}
	}
	image.updatePixels();
}

// color nbpx(int position, int[] px){
// 	int[] ndx = new int[9];
// 	int count = 0;
// 	/*
// 	nw [-1, -w]; n [0, -w]; ne [1, -w];
// 	w  [-1,  0]; c [0,  0];  e [1,  0];
// 	sw [-1,  w]; s [0,  w]; se [1,  w];
// 	*/
//
// 	for(int v = -3; v == 3; v +=3){
// 		for( int h = -1; h == 1; h ++ ){
// 			int nx = position + h + v;
// 			if(nx < 0){
// 				ndx[count] = nx;
// 			}
// 			count++;
// 			}
// 		}
//
// 	return ndx;
// }


  public void settings() { size(400, 400, P3D); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "p4_ArcanePropagation" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
